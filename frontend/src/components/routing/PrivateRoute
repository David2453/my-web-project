// frontend/src/components/routing/PrivateRoute.js
import React, { useContext } from 'react';
import { Navigate, Outlet } from 'react-router-dom';
import { AuthContext } from '../context/AuthContext';

// This component is used to protect routes that require authentication
const PrivateRoute = ({ roleRequired }) => {
  const { authState } = useContext(AuthContext);
  const { isAuthenticated, user, loading } = authState;

  // If still loading, show a loading spinner
  if (loading) {
    return (
      <div className="d-flex justify-content-center py-5">
        <div className="spinner-border text-primary" role="status">
          <span className="visually-hidden">Loading...</span>
        </div>
      </div>
    );
  }

  // If not authenticated, redirect to login page
  if (!isAuthenticated) {
    return <Navigate to="/login" />;
  }

  // If role is required and user doesn't have the required role, redirect to home
  if (roleRequired && (!user || user.role !== roleRequired)) {
    return <Navigate to="/" />;
  }

  // If authenticated and has the required role (if any), render the children
  return <Outlet />;
};

export default PrivateRoute;